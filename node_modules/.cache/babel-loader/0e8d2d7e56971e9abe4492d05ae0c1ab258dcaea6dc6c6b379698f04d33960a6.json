{"ast":null,"code":"var _jsxFileName = \"D:\\\\blog-dat\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const socket = io('http://localhost:3001');\n  // connect to the server\n  useEffect(() => {\n    // listen for incoming comments from the server\n    socket.on('comment', msg => {\n      setComments(comments => [...comments, msg]);\n    });\n    return () => {\n      // disconnect from the server when the component unmounts\n      socket.disconnect();\n    };\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    socket.emit('comment', newComment);\n    setNewComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Realtime Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MxCDS9ewhkO9e8lz5YjyzEXdntQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","App","comments","setComments","newComment","setNewComment","socket","on","msg","disconnect","handleSubmit","e","preventDefault","emit","map","comment","index","target","value"],"sources":["D:/blog-dat/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nfunction App() {\n  const [comments, setComments] = useState<string[]>([]);\n  const [newComment, setNewComment] = useState<string>('');\n\n  const socket = io('http://localhost:3001');\n  // connect to the server\n  useEffect(() => {\n\n    // listen for incoming comments from the server\n    socket.on('comment', (msg: string) => {\n      setComments((comments) => [...comments, msg]);\n    });\n\n    return () => {\n      // disconnect from the server when the component unmounts\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    socket.emit('comment', newComment);\n    setNewComment('');\n  };\n\n  return (\n    <div>\n      <h1>Realtime Comments</h1>\n      <ul>\n        {comments.map((comment, index) => (\n          <li key={index}>{comment}</li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={newComment}\n          onChange={(e) => setNewComment(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC;AAElC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAW,EAAE,CAAC;EACtD,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAExD,MAAMQ,MAAM,GAAGN,EAAE,CAAC,uBAAuB,CAAC;EAC1C;EACAD,SAAS,CAAC,MAAM;IAEd;IACAO,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGC,GAAW,IAAK;MACpCL,WAAW,CAAED,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEM,GAAG,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACAF,MAAM,CAACG,UAAU,EAAE;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAmC,IAAK;IAC5DA,CAAC,CAACC,cAAc,EAAE;IAClBN,MAAM,CAACO,IAAI,CAAC,SAAS,EAAET,UAAU,CAAC;IAClCC,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B;MAAA,UACGH,QAAQ,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B;QAAA,UAAiBD;MAAO,GAAfC,KAAK;QAAA;QAAA;QAAA;MAAA,QACf;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MAAM,QAAQ,EAAEN,YAAa;MAAA,wBAC3B;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEN,UAAW;QAClB,QAAQ,EAAGO,CAAC,IAAKN,aAAa,CAACM,CAAC,CAACM,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC/C,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GA3CQjB,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}