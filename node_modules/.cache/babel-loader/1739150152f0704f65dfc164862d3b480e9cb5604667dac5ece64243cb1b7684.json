{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst host = \"http://localhost:3000\";\nfunction App() {\n  _s();\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState();\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"gXWMHigg7VZvVOXohl3CNQvpSTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socketIOClient","host","App","mess","setMess","message","setMessage","id","setId","socketRef","current","connect"],"sources":["D:/blog-dat/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst host = \"http://localhost:3000\";\n\n\nfunction App() {\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState();\n\n  const socketRef = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host)\n  }, []);\n\n\n  return (\n    <></>\n  );\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAAA;AAE9C,MAAMC,IAAI,GAAG,uBAAuB;AAGpC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,EAAE,EAAEC,KAAK,CAAC,GAAGX,QAAQ,EAAE;EAE9B,MAAMY,SAAS,GAAGV,MAAM,EAAE;EAE1BD,SAAS,CAAC,MAAM;IACdW,SAAS,CAACC,OAAO,GAAGV,cAAc,CAACW,OAAO,CAACV,IAAI,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE,qCAAK;AAET;AAAC,GAfQC,GAAG;AAAA,KAAHA,GAAG;AAiBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}