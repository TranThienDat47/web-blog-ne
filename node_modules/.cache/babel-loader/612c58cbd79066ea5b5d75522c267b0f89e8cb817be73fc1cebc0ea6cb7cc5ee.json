{"ast":null,"code":"var _jsxFileName = \"D:\\\\blog-dat\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentList(_ref) {\n  let {\n    comments\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: comment.text\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = CommentList;\nconst CommentForm = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c2 = _s(_ref2 => {\n  _s();\n  let {\n    onSubmit\n  } = _ref2;\n  const [text, setText] = useState('');\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    onSubmit(text);\n    setText('');\n  }, [text, onSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}, \"dUOJ7ssBtxkO/T3g6/0Q8m/vo5s=\")), \"dUOJ7ssBtxkO/T3g6/0Q8m/vo5s=\");\n_c3 = CommentForm;\nfunction App() {\n  _s2();\n  const [comments, setComments] = useState([]);\n  const socket = io('http://localhost:3001');\n  useEffect(() => {\n    socket.on('comment', comment => {\n      setComments(comments => [...comments, comment]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleCommentSubmit = useCallback(text => {\n    const comment = {\n      id: String(Date.now()),\n      text\n    };\n    socket.emit('comment', comment);\n    setComments(comments => [...comments, comment]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Realtime Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      onSubmit: handleCommentSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"AqXtrhVIYwH7aDWCVV+BYAshgiM=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CommentList\");\n$RefreshReg$(_c2, \"CommentForm$React.memo\");\n$RefreshReg$(_c3, \"CommentForm\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","io","CommentList","comments","map","comment","text","id","CommentForm","memo","onSubmit","setText","handleSubmit","e","preventDefault","target","value","App","setComments","socket","on","disconnect","handleCommentSubmit","String","Date","now","emit"],"sources":["D:/blog-dat/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\n\ninterface Comment {\n  id: string;\n  text: string;\n}\n\nfunction CommentList({ comments }: { comments: Comment[] }) {\n  return (\n    <ul>\n      {comments.map((comment) => (\n        <li key={comment.id}>{comment.text}</li>\n      ))}\n    </ul>\n  );\n}\n\nconst CommentForm = React.memo(({ onSubmit }: { onSubmit: (text: string) => void }) => {\n  const [text, setText] = useState('');\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      onSubmit(text);\n      setText('');\n    },\n    [text, onSubmit],\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n});\n\nfunction App() {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const socket = io('http://localhost:3001');\n\n  useEffect(() => {\n    socket.on('comment', (comment: Comment) => {\n      setComments((comments) => [...comments, comment]);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleCommentSubmit = useCallback(\n    (text: string) => {\n      const comment: Comment = { id: String(Date.now()), text };\n      socket.emit('comment', comment);\n      setComments((comments) => [...comments, comment]);\n    },\n    [],\n  );\n\n  return (\n    <div>\n      <h1>Realtime Comments</h1>\n      <CommentList comments={comments} />\n      <CommentForm onSubmit={handleCommentSubmit} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,EAAE,MAAM,kBAAkB;AAAC;AAOlC,SAASC,WAAW,OAAwC;EAAA,IAAvC;IAAEC;EAAkC,CAAC;EACxD,oBACE;IAAA,UACGA,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACpB;MAAA,UAAsBA,OAAO,CAACC;IAAI,GAAzBD,OAAO,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QACpB;EAAC;IAAA;IAAA;IAAA;EAAA,QACC;AAET;AAAC,KARQL,WAAW;AAUpB,MAAMM,WAAW,iCAAGX,KAAK,CAACY,IAAI,UAAC,SAAwD;EAAA;EAAA,IAAvD;IAAEC;EAA+C,CAAC;EAChF,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMc,YAAY,GAAGZ,WAAW,CAC7Ba,CAAmC,IAAK;IACvCA,CAAC,CAACC,cAAc,EAAE;IAClBJ,QAAQ,CAACJ,IAAI,CAAC;IACdK,OAAO,CAAC,EAAE,CAAC;EACb,CAAC,EACD,CAACL,IAAI,EAAEI,QAAQ,CAAC,CACjB;EAED,oBACE;IAAM,QAAQ,EAAEE,YAAa;IAAA,wBAC3B;MAAO,IAAI,EAAC,MAAM;MAAC,KAAK,EAAEN,IAAK;MAAC,QAAQ,EAAGO,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5E;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEX,CAAC,kCAAC;AAAC,MAlBGR,WAAW;AAoBjB,SAASS,GAAG,GAAG;EAAA;EACb,MAAM,CAACd,QAAQ,EAAEe,WAAW,CAAC,GAAGpB,QAAQ,CAAY,EAAE,CAAC;EACvD,MAAMqB,MAAM,GAAGlB,EAAE,CAAC,uBAAuB,CAAC;EAE1CF,SAAS,CAAC,MAAM;IACdoB,MAAM,CAACC,EAAE,CAAC,SAAS,EAAGf,OAAgB,IAAK;MACzCa,WAAW,CAAEf,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEE,OAAO,CAAC,CAAC;IACnD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXc,MAAM,CAACE,UAAU,EAAE;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAGtB,WAAW,CACpCM,IAAY,IAAK;IAChB,MAAMD,OAAgB,GAAG;MAAEE,EAAE,EAAEgB,MAAM,CAACC,IAAI,CAACC,GAAG,EAAE,CAAC;MAAEnB;IAAK,CAAC;IACzDa,MAAM,CAACO,IAAI,CAAC,SAAS,EAAErB,OAAO,CAAC;IAC/Ba,WAAW,CAAEf,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAEE,OAAO,CAAC,CAAC;EACnD,CAAC,EACD,EAAE,CACH;EAED,oBACE;IAAA,wBACE;MAAA,UAAI;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1B,QAAC,WAAW;MAAC,QAAQ,EAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACnC,QAAC,WAAW;MAAC,QAAQ,EAAEmB;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV;AAAC,IA9BQL,GAAG;AAAA,MAAHA,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}